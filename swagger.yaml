openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
  description: API documentation for an e-commerce application
servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        address:
          type: string
        cart:
          type: array
          items:
            $ref: "#/components/schemas/Cart"
        order:
          type: array
          items:
            $ref: "#/components/schemas/Order"

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        quantity:
          type: integer
        cart:
          type: array
          items:
            $ref: "#/components/schemas/Cart"
        order:
          type: array
          items:
            $ref: "#/components/schemas/Order"
        category:
          $ref: "#/components/schemas/Category"

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        product:
          type: array
          items:
            $ref: "#/components/schemas/Product"

    Cart:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        quantity:
          type: integer
        product:
          $ref: "#/components/schemas/Product"

    Order:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        product:
          $ref: "#/components/schemas/Product"
        completed:
          type: boolean
        created_at:
          type: string
          format: date-time

  securitySchemes:
    jwt_auth:
      type: apiKey
      name: Authorization
      in: header

paths:
  /signup:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                address:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        "201":
          description: User created successfully
        "500":
          description: Internal server error

  /login:
    post:
      summary: Login to the application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
        "401":
          description: Invalid username or password
        "500":
          description: Internal server error

  /products:
    get:
      summary: Get all products
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error

  /products/{categoryName}:
    get:
      summary: Get products by category
      parameters:
        - name: categoryName
          in: path
          required: true
          description: Category name
          schema:
            type: string
      responses:
        "200":
          description: List of products in the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error

  /product/{productId}:
    get:
      summary: Get product by ID
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error

  /cart/{productId}:
    post:
      summary: Add product to cart
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
      responses:
        "200":
          description: Product added to cart
        "500":
          description: Internal server error

  /order/{productId}:
    post:
      summary: Place an order
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
      responses:
        "200":
          description: Order placed successfully
        "400":
          description: Product out of stock
        "500":
          description: Internal server error

  /cart/buy:
    post:
      summary: Buy whole cart
      responses:
        "200":
          description: Cart bought successfully
        "400":
          description: Product out of stock
        "500":
          description: Internal server error

  /cart:
    delete:
      summary: Delete cart
      responses:
        "200":
          description: Cart deleted successfully
        "500":
          description: Internal server error

  /orders:
    get:
      summary: List orders
      responses:
        "200":
          description: List of orders
        "500":
          description: Internal server error

  /order/{orderId}:
    get:
      summary: Retrieve order
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      responses:
        "200":
          description: Order details
        "500":
          description: Internal server error

security:
  - jwt_auth: []
